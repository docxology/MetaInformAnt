# METAINFORMANT Cursor Rules

## Directories
- output/: All outputs from tests and real runs must go here by default. Treat as ephemeral and reproducible.
- config/: Repository-level configuration files and options. Read via metainformant.core.config; allow env overrides.
- data/: Inputs such as datasets and local databases. Read-mostly, organized by domain and version.

## Path and I/O Conventions
- Do not write outside output/ unless an explicit user path is provided.
- Prefer functional APIs that accept a destination path; if omitted, default to output/ with a sensible subpath.
- Use metainformant.core.io for file I/O (JSON/JSONL/CSV/TSV) and gzip-aware open.
- Use metainformant.core.paths for path handling and containment checks.
- Use metainformant.core.cache for small JSON caches under output/ if needed.

## Configuration
- Centralize config loading in metainformant.core.config:
  - load_typed_env for typed env vars (prefix required)
  - load_postgres_config_from_env for DB settings
- Allow env vars to override files in config/.
- Domain modules should not hardcode absolute paths; accept config objects/paths from callers.

## Testing
- Tests must write artifacts only under output/. Clean up large intermediates when possible.
- Avoid networked writes and external side effects unless explicitly required by an integration test.
- Prefer deterministic seeds and stable filenames in output/ to ease diffing and CI reproducibility.

## Documentation
- Keep docs concise and reference core utilities. Show usage that respects the directories policy.
- When adding examples that write files, write to output/ and mention how to override paths.

## Style
- Follow repository code style and typing practices (Python 3.11+).
- Use clear, modular functions; avoid hidden global state.
- No mocks for analysis modules; integration tests may hit real small inputs located in tests/data/.

## Contributions
- New modules should: (1) read configs from config/ (with env overrides), (2) read inputs from data/, and (3) write outputs to output/ by default.


