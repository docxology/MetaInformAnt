# Pre-commit configuration for METAINFORMANT
# Ensures code quality and consistency across the repository
# Aligned with pyproject.toml settings and repository standards

repos:
  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.12
        args: [--line-length=120]
        types: [python]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]
        types: [python]

  # Python linting with flake8 (disabled due to configuration issues)
  # - repo: https://github.com/pycqa/flake8
  #   rev: 7.0.0
  #   hooks:
  #     - id: flake8
  #       args: [--max-line-length=120, --extend-ignore=E203,W503,F401,F841,E402,E722,E741,F811,F541]
  #       types: [python]

  # Type checking with mypy (disabled for now due to many issues)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       additional_dependencies: [types-requests, types-PyYAML]
  #       args: [--config-file=pyproject.toml]
  #       types: [python]

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Prevent large files from being committed
      - id: check-added-large-files
        args: [--maxkb=1000]

      # Check for merge conflicts
      - id: check-merge-conflict

      # Check YAML syntax
      - id: check-yaml
        args: [--allow-multiple-documents]

      # Check JSON syntax
      - id: check-json

      # Check TOML syntax
      - id: check-toml

      # Ensure files end with newline
      - id: end-of-file-fixer
        exclude: '\.png$|\.jpg$|\.jpeg$|\.gif$|\.pdf$'

      # Remove trailing whitespace
      - id: trailing-whitespace
        exclude: '\.md$|\.rst$'

      # Check for private keys
      - id: detect-private-key

      # Check for AWS credentials
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]

      # Fix mixed line endings
      - id: mixed-line-ending
        args: [--fix=lf]

  # Python security checks with bandit (disabled due to dependency issues)
  # - repo: https://github.com/pycqa/bandit
  #   rev: 1.7.5
  #   hooks:
  #     - id: bandit
  #       args: [-r, src/, -f, json, -o, output/bandit-report.json]
  #       types: [python]
  #       exclude: 'tests/.*'

  # Documentation checks (disabled for development - too many warnings)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: [--convention=numpy, --add-ignore=D100,D101,D102,D103,D104,D105,D107,D401,D406,D407]
  #       types: [python]
  #       exclude: 'tests/.*|.*/__init__.py'

  # Check for Python debugging statements (relaxed)
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      # - id: python-check-blanket-type-ignore  # Disabled due to many legitimate uses
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal

# Configuration for specific hooks
default_language_version:
  python: python3.12

# Files to exclude from all hooks
exclude: |
  (?x)^(
    \.git/.*|
    \.mypy_cache/.*|
    \.pytest_cache/.*|
    __pycache__/.*|
    \.venv/.*|
    venv/.*|
    \.uv-cache/.*|
    build/.*|
    dist/.*|
    \.egg-info/.*|
    output/.*|
    docs/_build/.*|
    .*\.egg-info/.*|
    uv\.lock
  )$

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 2.20.0
